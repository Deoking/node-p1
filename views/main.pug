extends layout

block content
    script.
        $(document).ready(function () {
            var socket = io.connect();

            //접속시 사용자 아이디를 소켓에 저장
            socket.userId = '#{user.id}';

            //로그인이벤트 전송
            socket.emit('login', {
                name : '#{user.name}',
                account : '#{user.account}',
                id : '#{user.id}'
            });

            //접속중인 클라이언트 리스트 알림 이벤트
            socket.on('notifyClientLoginList', function (data) {
                for (var i = 0; i < data.length; i++) {
                    data[i].isMe = socket.userId == data[i].id;
                    addClientToList(data[i]);
                }
                //updateConnectedClientCount();
            });

            //클라이언트접속 알림 이벤트
            socket.on('notifyClientLogin', function (data) {
                console.log('111');
                addClientToList(data);
                //updateConnectedClientCount();
            });

            //접속해제 클라이언트 알림 이벤트
            socket.on('notifyClientLogout', function (data) {
                var chatDialog = $('#chatDialog');
                if (chatDialog.hasClass('ui-dialog-content')) {
                    if (chatDialog.dialog('isOpen')) {
                        //현재 채팅중인 클라이언트라면
                        if (chatDialog.find('#targetClientSocketId').val() == data.socketId) {
                            alert('"' + data.name + '" has been disconnected.');
                            //채팅창 종료
                            chatDialog.dialog('close');
                        }
                    }
                }
                $('#client-' + data.userId).remove();
            });
            
            //방리스트받기 이벤트
            socket.on('room', function (data) {
                if(data.cmd == 'list'){
                    console.log(data.rooms);
                    var rooms = data.rooms;

                    for (var i=0; i<rooms.length; i++){
                        addRoomToList(rooms[i]);
                    }

                }

            });
            var chatDialog = $('#chatDialog');

            //채팅 전송 버튼 이벤트
            chatDialog.find('#sendBtn').on('click', function () {
                socket.emit('sendMessageToClient', {
                    client: $('#targetClientSocketId').val(),
                    clientName : $('#targetClientName').val(),
                    msg: $('#chatInput').val(),
                    mode: $('#chatMode').val()
                }, function (msg) {
                    createMessage(true, msg);
                });
            });

            //채팅창 오픈 이벤트
            socket.on('openChatDialog', function (data) {
                var clientFormData = arrayToObject($('#' + data.sender).serializeArray());
                createChatDialog(clientFormData, 'single');
            });

            //클라이언트로부터 메시지 수신
            socket.on('recieveMessageFromClient', function (data) {
                createMessage(false, data.msg);
            });

            //로그아웃
            $('#logout').on('click', function () {
                var cfm = confirm('Are you sure to logout?');
                if(cfm){
                    location.href='/logout'
                }else{
                    return false;
                }
            });
        });

    h1= title
    button#logout Logout
    #userinfo
        input(type='hidden', value=user.id)
        input(type='hidden', value=user.name)
        input(type='hidden', value=user.account)
    .main-container
        #clientListContainer.main-client-list-container.border-radius10
            .region-title.border-radius10
                p Connected client list.
                #clientList.item-list
    #chatDialog.display-none
        #chatArea.chat-area.border-radius10
        input#chatInput.chat-input(type='text')
        input#targetClientSocketId(type='hidden')
        input#targetClientName(type='hidden')
        input#chatMode(type='hidden')
        button#sendBtn.chat-send send





